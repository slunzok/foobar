Rails 3.1.3

Chapter 2: 

1) kuba@traktor:~/rails_projekty$ rails new demo_app
2) kuba@traktor:~/rails_projekty$ cd demo_app/
3) zakomentowalem gemy coffe-rails i uglifier, wykonalem ponownie bundle install 

Ruby version	1.9.2 (i686-linux)
RubyGems version	1.8.10
Rack version	1.3
Rails version	3.1.3
Active Record version	3.1.3
Action Pack version	3.1.3
Active Resource version	3.1.3
Action Mailer version	3.1.3
Active Support version	3.1.3

4) kuba@traktor:~/rails_projekty/demo_app$ rails g scaffold User name:string email:string
5) kuba@traktor:~/rails_projekty/demo_app$ bundle exec rake db:migrate
6) kuba@traktor:~/rails_projekty/demo_app$ rails g scaffold Micropost content:string user_id:integer
7) kuba@traktor:~/rails_projekty/demo_app$ bundle exec rake db:migrate
8) #app/models/user.rb -> has_many :microposts; #app/models/micropost.rb -> belongs_to :user

Chapter 3: 

1) kuba@traktor:~/rails_projekty$ rails new sample_app -T
2) kuba@traktor:~/rails_projekty$ cd sample_app/
3) kuba@traktor:~/rails_projekty/sample_app$ sudo aptitude install libxslt-dev libxml2-dev
4) geany Gemfile & bundle install

source 'http://rubygems.org'

gem 'rails', '3.1.3'
gem 'sqlite3'

group :development do
  gem 'rspec-rails', '2.6.1'
end

group :test do
  gem 'rspec-rails', '2.6.1'
  gem 'webrat', '0.7.1'
end

5) kuba@traktor:~/rails_projekty/sample_app$ rails g rspec:install
6) kuba@traktor:~/rails_projekty/sample_app$ rails g controller Pages home contact
7) kuba@traktor:~/rails_projekty/sample_app$ gem install autotest -v 4.4.6
8) kuba@traktor:~/rails_projekty/sample_app$ gem install autotest-rails-pure -v 4.1.2

??
gem install autotest-fsevent -v 0.2.4
gem install autotest-growl -v 0.2.16
??

9) kuba@traktor:~/rails_projekty/sample_app$ rm -rf spec/views
10) kuba@traktor:~/rails_projekty/sample_app$ rm -rf spec/helpers
11) #spec/controllers/pages_controller_spec.rb

require 'spec_helper'

describe PagesController do

  describe "GET 'home'" do
    it "should be successful" do
      get 'home'
      response.should be_success
    end
  end

  describe "GET 'contact'" do
    it "should be successful" do
      get 'contact'
      response.should be_success
    end
  end

end

12) kuba@traktor:~/rails_projekty/sample_app$ bundle exec rspec spec/
13) #spec/controllers/pages_controller_spec.rb

require 'spec_helper'

describe PagesController do
  render_views

  describe "GET 'home'" do
    it "should be successful" do
      get 'home'
      response.should be_success
    end

    it "should have the right title" do
      get 'home'
      response.should have_selector("title", :content => "Ruby on Rails Tutorial Sample App | Home")
    end
  end

  describe "GET 'contact'" do
    it "should be successful" do
      get 'contact'
      response.should be_success
    end

    it "should have the right title" do
      get 'contact'
      response.should have_selector("title", :content => "Ruby on Rails Tutorial Sample App | Contact")
    end
  end

  describe "GET 'about'" do
    it "should be successful" do
      get 'about'
      response.should be_success
    end

    it "should have the right title" do
      get 'about'
      response.should have_selector("title", :content => "Ruby on Rails Tutorial Sample App | About")
    end
  end
end

14) kuba@traktor:~/rails_projekty/sample_app$ bundle exec rspec spec/
15) kuba@traktor:~/rails_projekty/sample_app$ rm app/views/layouts/application.html.erb
16) #app/views/pages/home.html.erb

<!DOCTYPE html>
<html>
  <head>
    <title>Ruby on Rails Tutorial Sample App | Home</title>
  </head>
  <body>
    <h1>Sample App</h1>
    <p>
      This is the home page for the
      <a href="http://railstutorial.org/">Ruby on Rails Tutorial</a>
      sample application.
    </p>
  </body>
</html>

17) #app/controllers/pages_controller.rb

class PagesController < ApplicationController

	def home
		@title = "Home"
	end

	def contact
		@title = "Contact"
	end

	def about
		@title = "About"
	end

end

18) #app/views/pages/home.html.erb

<!DOCTYPE html>
<html>
  <head>
    <title>Ruby on Rails Tutorial Sample App | <%= @title %></title>
  </head>
  <body>
    <h1>Sample App</h1>
    <p>
      This is the home page for the
      <a href="http://railstutorial.org/">Ruby on Rails Tutorial</a>
      sample application.
    </p>
  </body>
</html>

19) #app/views/layouts/application.html.erb

<!DOCTYPE html>
<html>
  <head>
    <title>Ruby on Rails Tutorial Sample App | <%= @title %></title>
    <%= csrf_meta_tag %>
  </head>
  <body>
    <%= yield %>
  </body>
</html>

20) #app/views/pages/home.html.erb

<h1>Sample App</h1>
<p>Home</p>

Chapter 4: 

1) #app/helpers/application_helper.rb

module ApplicationHelper

  # Return a title on a per-page basis.
  def title
    base_title = "Ruby on Rails Tutorial Sample App"
    if @title.nil?
      base_title
    else
      "#{base_title} | #{@title}"
    end
  end
end

2) #app/views/layouts/application.html.erb

<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <%= csrf_meta_tag %>
  </head>
  <body>
    <%= yield %>
  </body>
</html>

3) kuba@traktor:~/rails_projekty/sample_app$ cp -r ../blueprint-css/blueprint public/stylesheets
4) #app/views/layouts/application.html.erb

<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <%= csrf_meta_tag %>
    <%= stylesheet_link_tag 'blueprint/screen', :media => 'screen' %>
    <%= stylesheet_link_tag 'blueprint/print',  :media => 'print' %>
  </head>
  <body>
    <%= yield %>
  </body>
</html>
