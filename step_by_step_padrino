1) kuba@traktor:~$ padrino g project zzz -t rspec -e haml -m rr -s jquery -d activerecord -c sass
      create  
      create  .gitignore
      create  config.ru
      create  config/apps.rb
      create  config/boot.rb
      create  public/favicon.ico
      create  public/images
      create  public/javascripts
      create  public/stylesheets
      create  tmp
      create  .components
      create  app
      create  app/app.rb
      create  app/controllers
      create  app/helpers
      create  app/views
      create  app/views/layouts
      create  Gemfile
    applying  activerecord (orm)...
       apply  orms/activerecord
      insert  Gemfile
      insert  Gemfile
      create  config/database.rb
    applying  rspec (test)...
       apply  tests/rspec
      insert  Gemfile
      insert  Gemfile
      create  spec/spec_helper.rb
      create  spec/spec.rake
    applying  rr (mock)...
       apply  mocks/rr
      insert  Gemfile
      insert  spec/spec_helper.rb
    applying  jquery (script)...
       apply  scripts/jquery
      create  public/javascripts/jquery.js
      create  public/javascripts/jquery-ujs.js
      create  public/javascripts/application.js
    applying  haml (renderer)...
       apply  renderers/haml
      insert  Gemfile
    applying  sass (stylesheet)...
       apply  stylesheets/sass
      insert  Gemfile
      insert  app/app.rb
      create  lib/sass_init.rb
      create  app/stylesheets
   identical  .components

=================================================================
zzz is ready for development!
=================================================================
$ cd ./zzz
$ bundle install
=================================================================

2) kuba@traktor:~$ cd zzz
3) kuba@traktor:~/zzz$ bundle install
Fetching source index for http://rubygems.org/
Using rake (0.9.2.2) 
Using multi_json (1.0.4) 
Using activesupport (3.1.3) 
Using builder (3.0.0) 
Using i18n (0.6.0) 
Using activemodel (3.1.3) 
Using arel (2.2.1) 
Using tzinfo (0.3.31) 
Using activerecord (3.1.3) 
Using bundler (1.0.21) 
Using diff-lcs (1.1.3) 
Using mime-types (1.17.2) 
Using grit (2.4.1) 
Using haml (3.1.4) 
Using rack (1.3.5) 
Using url_mount (0.2.1) 
Using http_router (0.10.2) 
Using polyglot (0.3.3) 
Using treetop (1.4.10) 
Using mail (2.3.0) 
Using rack-protection (1.1.4) 
Using tilt (1.3.3) 
Using sinatra (1.3.1) 
Using thor (0.14.6) 
Using padrino-core (0.10.5) 
Using padrino-helpers (0.10.5) 
Using padrino-admin (0.10.5) 
Using padrino-cache (0.10.5) 
Using padrino-gen (0.10.5) 
Using padrino-mailer (0.10.5) 
Using padrino (0.10.5) 
Using rack-test (0.6.1) 
Installing rr (1.0.4) 
Installing rspec-core (2.7.1) 
Installing rspec-expectations (2.7.0) 
Installing rspec-mocks (2.7.0) 
Installing rspec (2.7.0) 
Using sass (3.1.12) 
Using sinatra-flash (0.3.0) 
Using sqlite3 (1.3.5) 
Your bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.

4) kuba@traktor:~/zzz$ padrino g controller base get:index
      create  app/controllers/base.rb
      create  app/helpers/base_helper.rb
      create  app/views/base
       apply  tests/rspec
      create  spec/app/controllers/base_controller_spec.rb

5) #app/controllers/base.rb

Zzz.controllers :base do

  get :index, :map => '/' do
  	"Strona glowna"
  end

end

6) #app/app.rb

class Zzz < Padrino::Application
  register SassInitializer
  register Padrino::Rendering
  register Padrino::Mailer
  register Padrino::Helpers

  enable :sessions

  set :delivery_method, :smtp => {
		:address         			=> 'smtp.gmail.com',
		:port            			=>  587,
		:user_name       			=> 'jakisuser@gmail.com',
		:password        			=> 'jakieshaslo',
		:authentication  			=> :plain,
		:enable_starttks_auto => true
	}
	
end

7) kuba@traktor:~/zzz$ padrino g mailer Sample registration_email
      create  app/mailers/sample.rb
      create  app/views/mailers/sample

8) #app/mailers/sample.rb

Zzz.mailer :sample do
  email :registration_email do |name, email, activation_code|
    from 'MyGame Team <jakisuser@gmail.com>'
    to email
    subject		'Welcome to the site!'
    locals :name => name, :email => email, :activation_code => activation_code
    render 'sample/registration_email'
    content_type :plain
  end
end

9) #app/views/mailers/sample/registration_email.haml

Thank you for registration #{name}!
Your activation code is: #{activation_code}

10) kuba@traktor:~/zzz$ padrino g controller sessions get:new post:create delete:destroy
      create  app/controllers/sessions.rb
      create  app/helpers/sessions_helper.rb
      create  app/views/sessions
       apply  tests/rspec
      create  spec/app/controllers/sessions_controller_spec.rb

11) #app/controllers/sessions.rb

Zzz.controllers :sessions do

  get :new, :map => 'login' do
  	render 'sessions/new'
  end

  post :create, :map => 'login' do
  	qwe = params[:nazwa_usera]
  	deliver(:sample, :registration_email, qwe, "slunzok@gmail.com")
  end

  delete :destroy do
  end

end

12) #app/views/sessions/new.haml

- form_tag url_for(:sessions, :create), :method => 'post'  do
	Nazwa usera:
	= text_field_tag 'nazwa_usera', :value => params[:nazwa_usera]
	= submit_tag 'Wyslij! :)'
	
=======================================================================
	
13) kuba@traktor:~/zzz$ padrino g model Account username:string email:string crypted_password:string activation_code:string is_active:boolean
       apply  orms/activerecord
       apply  tests/rspec
      create  models/account.rb
      create  spec/models/account_spec.rb
      create  db/migrate/001_create_accounts.rb

14) #db/migrate/001_create_accounts.rb

class CreateAccounts < ActiveRecord::Migration
  def self.up
    create_table :accounts do |t|
      t.string :username
      t.string :email
      t.string :crypted_password
      t.string :activation_code
      t.boolean :is_active
      t.timestamps
    end
  end

  def self.down
    drop_table :accounts
  end
end

15) kuba@traktor:~/zzz$ padrino rake ar:create
=> Executing Rake ar:create ...
/home/kuba/zzz/db/zzz_development.db already exists

16) kuba@traktor:~/zzz$ padrino rake ar:migrate
=> Executing Rake ar:migrate ...
==  CreateAccounts: migrating =================================================
-- create_table(:accounts)
   -> 0.0050s
==  CreateAccounts: migrated (0.0056s) ========================================

17) #models/account.rb

class Account < ActiveRecord::Base
  attr_accessor :password, :password_confirmation

  # Validations
  validates_presence_of     :username, :email
  validates_uniqueness_of		:username, :case_sensitive => false
  validates_presence_of     :password,                   :if => :password_required
  validates_presence_of     :password_confirmation,      :if => :password_required
  validates_length_of       :password, :within => 4..40, :if => :password_required
  validates_confirmation_of :password,                   :if => :password_required
  validates_length_of       :email,    :within => 3..100
  validates_uniqueness_of   :email,    :case_sensitive => false
  validates_format_of       :email,    :with => /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i

  # Callbacks
  before_save :activation_code
  before_save :encrypt_password, :if => :password_required

	def activation_code
    self.activation_code = SecureRandom.hex(16)
	end
	
  ##
  # This method is for authentication purpose
  #
  def self.authenticate(username, password)
    account = first(:conditions => { :username => username }) if username.present?
    account && account.has_password?(password) ? account : nil
  end

  def has_password?(password)
    ::BCrypt::Password.new(crypted_password) == password
  end

  private
    def encrypt_password
      self.crypted_password = ::BCrypt::Password.create(password)
    end

    def password_required
      crypted_password.blank? || password.present?
    end
end

18) kuba@traktor:~/zzz$ padrino g controller accounts get:index get:new post:create get:edit put:update delete:destroy
      create  app/controllers/accounts.rb
      create  app/helpers/accounts_helper.rb
      create  app/views/accounts
       apply  tests/rspec
      create  spec/app/controllers/accounts_controller_spec.rb

19) #app/controllers/accounts.rb

Zzz.controllers :accounts do

  get :index do
  	'OK!'
  end

  get :new, :map => 'signup' do
  	@account = Account.new
    render 'accounts/new'
  end

  post :create, :map => 'signup' do
  	@account = Account.new(params[:account])
    if @account.save
    	deliver(:sample, :registration_email, @account.username, @account.email, @account.activation_code)
      flash[:notice] = 'Account was successfully created.'
      redirect url(:accounts, :index)
    else
      render 'accounts/new'
    end
  end

  get :edit do
  end

  put :update do
  end

  delete :destroy do
  end

end

20) #app/views/accounts/new.haml

-form_for :account, url(:accounts, :create), :class => :form do |f|
	=f.label :username
	=f.error_message_on :username
	=f.text_field :username
	
	=f.label :email
	=f.error_message_on :email
	=f.text_field :email
	
	=f.label :password
	=f.error_message_on :password
	=f.text_field :password
	
	=f.label :password_confirmation
	=f.error_message_on :password_confirmation
	=f.text_field :password_confirmation
	
	= submit_tag 'Wyslij! :)'
	
21) dodac: gem 'bcrypt-ruby', :require => "bcrypt" do Gemfile :/
